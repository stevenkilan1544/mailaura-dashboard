<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>User Dashboard - MKO TOOLZ</title>
  <link rel="icon" type="image/x-icon" href="/favicon.ico">
  <link rel="icon" type="image/png" href="/logo.png">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
  <style>
    body {background: #f8fafc;}
    .navbar {background: #0d6efd;}
    .navbar-brand, .nav-link, .navbar-text {color: #fff !important;}
    .navbar-logo {height: 40px; width: 40px; margin-right: 10px; vertical-align: middle; border-radius: 8px;}
    .sidebar {
      background: #0d1b3f;
      min-height: 100vh;
      color: #fff;
      box-shadow: 2px 0 8px rgba(13, 30, 63, 0.09);
    }
    .sidebar .nav-link {
      color: #fff !important;
      font-weight: 500;
      border-radius: 6px;
      margin-bottom: 4px;
      transition: background 0.2s;
      cursor: pointer;
    }
    .sidebar .nav-link.active {
      background: #1e45b6;
      color: #fff !important;
      font-weight: bold;
      box-shadow: 0 2px 6px rgba(30,69,182,0.10);
    }
    .sidebar .nav-link:hover {
      background: #113174;
      color: #fff !important;
    }
    .sidebar .nav-link i {margin-right: 8px;}
    .main {padding: 30px;}
    .section-title {color: #0d6efd;}
    .card {box-shadow: 0 2px 8px rgba(0,0,0,0.10);}
    .settings-label {font-weight: 500;}
    .order-badge {font-size: 0.9em;}
    .balance-badge {font-size: 1em; background: #28a745 !important;}
    .alert-info {background: #e6f4ff;}
    .badge.bg-success {background-color: #28a745 !important;}
    .badge.bg-warning {background-color: #ffc107 !important;}
    .btn-proxy, .btn-scampage {background: #36c6f2; color: #fff;}
    .btn-proxy:hover, .btn-scampage:hover {background: #0d6efd; color: #fff;}
    .card-title-proxy {color: #36c6f2;}
    .card-title-scampage {color: #d9534f;}
    .modal-header {background: #0d6efd; color: #fff;}
    .tool-modal .modal-title {font-size: 1.3rem;}
    .tool-modal .modal-body {font-size: 1.09rem;}
    .tool-list-group .list-group-item {cursor:pointer;}
    .tool-list-group .list-group-item.active {background:#e6f4ff;}
    .hide {display:none;}
    .logout-warning {
      background: #ffebee;
      color: #c62828;
      border: 1px solid #c62828;
      border-radius: 6px;
      padding: 10px;
      margin-bottom: 16px;
      font-size: 1em;
      display: none;
    }
    @media (max-width: 768px) {
      .sidebar {min-height: auto;}
    }
  </style>
</head>
<body>
  <nav class="navbar navbar-expand-lg">
    <div class="container">
      <a class="navbar-brand fw-bold d-flex align-items-center" href="/">
        <img class="navbar-logo" src="/logo.png" alt="MKO TOOLZ Logo">
        <span>MKO TOOLZ</span>
      </a>
      <span class="navbar-text ms-auto">Welcome, <span id="userName">User</span>!</span>
      <button id="topupBtnNavbar" class="btn btn-warning ms-2" type="button">
        <i class="fas fa-coins"></i> Top Up Balance
      </button>
      <span class="badge balance-badge ms-2" id="userBalance">$0.00</span>
      <a href="/logout" class="btn btn-light ms-3">Logout</a>
    </div>
  </nav>
  <div class="container-fluid">
    <div class="row">
      <!-- Sidebar -->
      <div class="col-md-2 pt-4 sidebar">
        <nav class="nav flex-column" id="sidebarMenu">
          <a class="nav-link active" data-section="market"><i class="fas fa-store"></i> Marketplace</a>
          <a class="nav-link" data-section="domain"><i class="fas fa-globe"></i> Buy Domain</a>
          <a class="nav-link" data-section="email-list"><i class="fas fa-list"></i> Email Lists</a>
          <a class="nav-link" data-section="orders"><i class="fas fa-receipt"></i> My Orders</a>
          <a class="nav-link" data-section="topups"><i class="fas fa-wallet"></i> Top Up History</a>
          <a class="nav-link" data-section="host"><i class="fas fa-upload"></i> Host Page</a>
          <a class="nav-link" data-section="settings"><i class="fas fa-cog"></i> Settings</a>
        </nav>
      </div>
      <!-- Main -->
      <div class="col-md-10 main">
        <div id="logoutWarning" class="logout-warning"></div>
        <!-- Sections -->
        <div id="section-market" class="section">
          <h2 class="section-title mb-3"><i class="fas fa-store"></i> Marketplace</h2>
          <div class="row g-4">
            <!-- SMTP -->
            <div class="col-md-3">
              <div class="card h-100">
                <div class="card-body">
                  <h5 class="card-title">SMTP Server</h5>
                  <p class="card-text">Bulk, transactional, high deliverability.<br>From $30/mo</p>
                  <button class="btn btn-primary w-100 tool-modal-btn" data-tool-type="SMTP">Buy SMTP</button>
                </div>
              </div>
            </div>
            <!-- SMS Sender -->
            <div class="col-md-3">
              <div class="card h-100">
                <div class="card-body">
                  <h5 class="card-title">SMS Sender</h5>
                  <p class="card-text">Global API, easy integration.<br>From $20/mo</p>
                  <button class="btn btn-primary w-100 tool-modal-btn" data-tool-type="SMS Sender">Buy SMS Sender</button>
                </div>
              </div>
            </div>
            <!-- Email Validator -->
            <div class="col-md-3">
              <div class="card h-100">
                <div class="card-body">
                  <h5 class="card-title">Email Validator</h5>
                  <p class="card-text">Instant, accurate, API available.<br>$10/10k checks</p>
                  <button class="btn btn-primary w-100 tool-modal-btn" data-tool-type="Email Validator">Buy Email Validator</button>
                </div>
              </div>
            </div>
            <!-- Number Validator -->
            <div class="col-md-3">
              <div class="card h-100">
                <div class="card-body">
                  <h5 class="card-title">Number Validator</h5>
                  <p class="card-text">Validate phone numbers worldwide.<br>$10/10k checks</p>
                  <button class="btn btn-primary w-100 tool-modal-btn" data-tool-type="Number Validator">Buy Number Validator</button>
                </div>
              </div>
            </div>
            <!-- Number Generator (custom modal) -->
            <div class="col-md-3">
              <div class="card h-100">
                <div class="card-body">
                  <h5 class="card-title">Number Generator</h5>
                  <p class="card-text">Generate valid mobile numbers.<br>Any area code, any amount.</p>
                  <button class="btn btn-primary w-100" id="numberGeneratorBtn">Buy Number Generator</button>
                </div>
              </div>
            </div>
            <!-- Scampage -->
            <div class="col-md-3">
              <div class="card h-100">
                <div class="card-body">
                  <h5 class="card-title card-title-scampage">Scampage</h5>
                  <p class="card-text">Ready-to-use bank scampages for campaigns and testing.<br>Choose your bank.</p>
                  <button class="btn btn-scampage w-100" onclick="window.location.href='/scampage-list.html'">Buy Scampage</button>
                </div>
              </div>
            </div>
            <!-- Proxies -->
            <div class="col-md-3">
              <div class="card h-100">
                <div class="card-body">
                  <h5 class="card-title card-title-proxy">Proxies</h5>
                  <p class="card-text">Premium proxies for scraping, automation, privacy, and marketing.</p>
                  <button class="btn btn-proxy w-100 tool-modal-btn" data-tool-type="Proxies">Buy Proxies</button>
                </div>
              </div>
            </div>
            <!-- RDP -->
            <div class="col-md-3">
              <div class="card h-100">
                <div class="card-body">
                  <h5 class="card-title">Windows RDP</h5>
                  <p class="card-text">USA, UK, EU, Asia<br>From $10/mo</p>
                  <button class="btn btn-primary w-100" onclick="buy('RDP','USA',10)">Buy RDP</button>
                </div>
              </div>
            </div>
            <!-- Premium Email List -->
            <div class="col-md-3">
              <div class="card h-100">
                <div class="card-body">
                  <h5 class="card-title">Premium Email List</h5>
                  <p class="card-text">Choose from Gmail, Yahoo, business emails, etc.</p>
                  <button class="btn btn-primary w-100" onclick="window.location.href='/email-list-list.html'">Buy Email List</button>
                </div>
              </div>
            </div>
            <!-- Domain Purchase -->
            <div class="col-md-3">
              <div class="card h-100">
                <div class="card-body">
                  <h5 class="card-title">Domain Purchase</h5>
                  <p class="card-text">Instant registration, best prices.<br>From $9</p>
                  <button class="btn btn-primary w-100" onclick="showSection('domain')">Buy Domain</button>
                </div>
              </div>
            </div>
          </div>
        </div>
        <!-- Modal for tool purchase (SMTP, SMS, etc) -->
        <div class="modal fade" id="toolPurchaseModal" tabindex="-1">
          <div class="modal-dialog modal-lg">
            <div class="modal-content tool-modal">
              <div class="modal-header">
                <h5 class="modal-title">Choose Tool</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
              </div>
              <div class="modal-body" id="toolModalBody"></div>
            </div>
          </div>
        </div>
        <!-- Buy Domain Section -->
        <div id="section-domain" class="section hide">
          <h2 class="section-title mb-3"><i class="fas fa-globe"></i> Buy Domain</h2>
          <form id="domainForm" class="mb-3">
            <div class="input-group">
              <input type="text" class="form-control" id="domainInput" placeholder="Enter domain (e.g. mysite.com)" required>
              <button class="btn btn-primary" type="submit">Search</button>
            </div>
          </form>
          <div id="domainResult"></div>
        </div>
        <!-- Email List Purchase Section -->
        <div id="section-email-list" class="section hide">
          <h2 class="section-title mb-3"><i class="fas fa-list"></i> Purchase Email List</h2>
          <form id="emailListForm" class="mb-3">
            <div class="mb-2">
              <label for="emailType" class="form-label">Type</label>
              <select class="form-select" id="emailType">
                <option value="USA Business">USA Business</option>
                <option value="UK Business">UK Business</option>
                <option value="EU Business">EU Business</option>
                <option value="Education">Education</option>
                <option value="Health">Health</option>
                <option value="Technology">Technology</option>
                <option value="Custom">Custom</option>
              </select>
            </div>
            <div class="mb-2">
              <label for="emailDomain" class="form-label">Domain Type</label>
              <select class="form-select" id="emailDomain">
                <option value="@gmail.com">@gmail.com</option>
                <option value="@yahoo.com">@yahoo.com</option>
                <option value="@outlook.com">@outlook.com</option>
                <option value="@company.com">@company.com</option>
                <option value="@edu.com">@edu.com</option>
                <option value="@any">@any</option>
              </select>
            </div>
            <button class="btn btn-primary" type="submit">Purchase</button>
          </form>
          <div id="emailListResult"></div>
        </div>
        <!-- Orders Section -->
        <div id="section-orders" class="section hide">
          <h2 class="section-title mb-3"><i class="fas fa-receipt"></i> My Orders (including Top Ups)</h2>
          <table class="table">
            <thead>
              <tr>
                <th>Type</th>
                <th>Detail</th>
                <th>Status</th>
                <th>Amount</th>
                <th>Date</th>
                <th>Download</th>
              </tr>
            </thead>
            <tbody id="ordersTable"></tbody>
          </table>
        </div>
        <!-- Top Up History Section -->
        <div id="section-topups" class="section hide">
          <h2 class="section-title mb-3"><i class="fas fa-wallet"></i> Top Up History</h2>
          <table class="table">
            <thead>
              <tr>
                <th>Amount</th>
                <th>Coin</th>
                <th>Invoice</th>
                <th>Status</th>
                <th>Date</th>
                <th>Monitor</th>
              </tr>
            </thead>
            <tbody id="topupsTable"></tbody>
          </table>
        </div>
        <!-- Host Page Section -->
        <div id="section-host" class="section hide">
          <h2 class="section-title mb-3"><i class="fas fa-upload"></i> Host Your Page</h2>
          <form id="hostForm" enctype="multipart/form-data">
            <div class="mb-2">
              <label for="hostDomain" class="form-label">Domain (must own)</label>
              <input type="text" class="form-control" id="hostDomain" placeholder="mysite.com" required>
            </div>
            <div class="mb-2">
              <label for="hostFile" class="form-label">Upload HTML File</label>
              <input type="file" class="form-control" id="hostFile" name="page" required>
            </div>
            <button class="btn btn-primary" type="submit">Upload</button>
          </form>
          <div id="hostResult"></div>
        </div>
        <!-- Settings Section -->
        <div id="section-settings" class="section hide">
          <h2 class="section-title mb-3"><i class="fas fa-cog"></i> Settings</h2>
          <div class="row">
            <div class="col-md-4 text-center mb-4">
              <img id="settingsAvatar" src="/logo.png" alt="Avatar" class="rounded-circle" style="width:100px;height:100px;border:2px solid #0d6efd;">
              <form id="avatarForm" class="mt-2" enctype="multipart/form-data">
                <input type="file" id="avatarFile" name="avatar" accept="image/*" class="form-control mb-2">
                <button class="btn btn-outline-primary btn-sm" type="submit"><i class="fas fa-image"></i> Change Avatar</button>
              </form>
            </div>
            <div class="col-md-8">
              <form id="settingsForm">
                <div class="mb-2">
                  <label class="form-label settings-label"><i class="fas fa-user"></i> Full Name</label>
                  <input type="text" class="form-control" id="settingsName">
                </div>
                <div class="mb-2">
                  <label class="form-label settings-label"><i class="fas fa-envelope"></i> Email</label>
                  <input type="email" class="form-control" id="settingsEmail">
                </div>
                <div class="mb-2">
                  <label class="form-label settings-label"><i class="fas fa-key"></i> New Password</label>
                  <input type="password" class="form-control" id="settingsPassword" placeholder="Leave empty to keep current">
                </div>
                <div class="mb-2">
                  <span class="badge bg-info" id="settingsProvider"></span>
                  <span class="badge bg-secondary" id="settingsJoined"></span>
                </div>
                <button class="btn btn-success" type="submit"><i class="fas fa-save"></i> Update Settings</button>
                <button class="btn btn-danger float-end" id="deleteAccountBtn" type="button"><i class="fas fa-trash"></i> Delete Account</button>
              </form>
              <div id="settingsResult" class="mt-3"></div>
              <hr>
              <div class="mt-3">
                <h5><i class="fas fa-upload"></i> Host Your Page</h5>
                <form id="settingsHostForm" enctype="multipart/form-data">
                  <div class="mb-2">
                    <label for="settingsHostDomain" class="form-label">Domain (must own)</label>
                    <input type="text" class="form-control" id="settingsHostDomain" placeholder="mysite.com" required>
                  </div>
                  <div class="mb-2">
                    <label for="settingsHostFile" class="form-label">Upload HTML File</label>
                    <input type="file" class="form-control" id="settingsHostFile" name="page" required>
                  </div>
                  <button class="btn btn-primary" type="submit">Upload</button>
                </form>
                <div id="settingsHostResult"></div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <!-- Top Up Modal -->
  <div class="modal fade" id="topupModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content">
        <div class="modal-header"><h5 class="modal-title">Top Up Balance</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body">
          <form id="topupForm">
            <label>Amount (USD):</label>
            <input type="number" min="5" class="form-control mb-2" id="topupAmount" required>
            <label>Pay With:</label>
            <select class="form-select mb-2" id="topupCoin" required>
              <option value="btc">BTC (Bitcoin)</option>
              <option value="ltc">LTC (Litecoin)</option>
              <option value="usdt">USDT (Tether)</option>
              <option value="trx">TRX (TRON)</option>
            </select>
            <button class="btn btn-primary w-100" type="submit" id="topupFormSubmitBtn"><i class="fas fa-coins"></i> Pay With Crypto</button>
          </form>
          <div id="topupResult" class="mt-2"></div>
        </div>
      </div>
    </div>
  </div>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    // Sidebar click and section display logic
    document.querySelectorAll("#sidebarMenu .nav-link").forEach(function(nav) {
      nav.addEventListener("click", function() {
        document.querySelectorAll("#sidebarMenu .nav-link").forEach(l=>l.classList.remove("active"));
        nav.classList.add("active");
        showSection(nav.getAttribute("data-section"));
      });
    });
    function showSection(id) {
      document.querySelectorAll(".section").forEach(s => s.classList.add("hide"));
      let el = document.getElementById('section-' + id);
      if (el) el.classList.remove("hide");
    }

    // Marketplace modal logic for automated tools
    document.querySelectorAll('.tool-modal-btn').forEach(btn => {
      btn.onclick = function() {
        let type = btn.getAttribute('data-tool-type');
        if (type === "Number Generator") return; // Handled by custom modal
        let modal = new bootstrap.Modal(document.getElementById('toolPurchaseModal'));
        document.getElementById('toolModalBody').innerHTML = '<div class="text-info">Loading...</div>';
        fetch('/tool-list/' + encodeURIComponent(type))
          .then(r => r.json())
          .then(data => {
            if (!data.tools || !data.tools.length) {
              document.getElementById('toolModalBody').innerHTML = '<div class="alert alert-danger">No tools available.</div>';
              return;
            }
            let html = '<ul class="list-group tool-list-group mb-3">';
            data.tools.forEach((tool, idx) => {
              html += `<li class="list-group-item" onclick="showToolDetail('${type}',${idx})">
                <strong>${tool.name}</strong><br>
                <span>${tool.description}</span><br>
                <span class="text-primary fw-bold">${tool.price}</span>
              </li>`;
            });
            html += '</ul><div id="toolDetailBox"></div>';
            document.getElementById('toolModalBody').innerHTML = html;
          });
        modal.show();
      };
    });

    window.showToolDetail = function(type, idx) {
      fetch('/tool-list/' + encodeURIComponent(type))
        .then(r => r.json())
        .then(data => {
          let tool = data.tools[idx];
          if (!tool) return;
          let html = `<div class="p-3 border rounded mb-2">
            <h5>${tool.name}</h5>
            <div>${tool.description}</div>
            <div class="mb-2"><b>Price:</b> <span class="text-primary">${tool.price}</span></div>
            <div class="mb-2"><b>Instructions:</b> <span>${tool.instructions}</span></div>
            <button class="btn btn-success" onclick="purchaseTool('${type}',${idx})">Purchase</button>
          </div>`;
          document.getElementById('toolDetailBox').innerHTML = html;
        });
    };

    window.purchaseTool = function(type, idx) {
      fetch('/purchase-tool', {
        method: 'POST',
        headers: {'Content-Type':'application/json'},
        body: JSON.stringify({type, index: idx})
      })
      .then(r => r.json())
      .then(data => {
        let html = `<div class="alert alert-success">
          <b>Purchased:</b> ${data.name}<br>
          <b>Description:</b> ${data.description}<br>
          <b>Instructions:</b> ${data.instructions}<br>
          <b>Download/Link:</b> <a href="${data.file_or_link}" target="_blank">${data.file_or_link}</a>
        </div>`;
        document.getElementById('toolDetailBox').innerHTML = html;
        loadOrders(); // Refresh orders after buying
      });
    };

    document.getElementById('numberGeneratorBtn').onclick = function() {
      let modal = new bootstrap.Modal(document.getElementById('toolPurchaseModal'));
      document.getElementById('toolModalBody').innerHTML = `
        <div>
          <h5>Buy Number Generator</h5>
          <form id="numberGeneratorForm">
            <label class="form-label mt-2">Area Code</label>
            <input type="text" class="form-control mb-2" id="ngAreaCode" placeholder="e.g. 201" required maxlength="3" pattern="\\d{3}">
            <label class="form-label">How Many Numbers?</label>
            <input type="number" class="form-control mb-2" id="ngAmount" min="1" max="100000" value="1000" required>
            <div><b>Price:</b> <span class="text-primary">$12 per 1000 numbers</span></div>
            <button class="btn btn-success mt-2" type="submit">Generate & Buy</button>
          </form>
          <div id="numberGeneratorResult" class="mt-3"></div>
        </div>
      `;
      document.getElementById('numberGeneratorForm').onsubmit = function(e) {
        e.preventDefault();
        let areaCode = document.getElementById('ngAreaCode').value.replace(/\D/g,'');
        if(areaCode.length !== 3){document.getElementById('numberGeneratorResult').innerHTML='<div class="alert alert-danger">Area code must be 3 digits.</div>';return;}
        let amount = parseInt(document.getElementById('ngAmount').value);
        let totalPrice = Math.ceil(amount / 1000) * 12;
        document.getElementById('numberGeneratorResult').innerHTML = '<div class="text-info">Generating numbers...</div>';
        fetch('/generate-numbers', {
          method: 'POST',
          headers: {'Content-Type':'application/json'},
          body: JSON.stringify({areaCode, amount, price: totalPrice})
        })
        .then(r => r.json())
        .then(data => {
          if (data.success) {
            document.getElementById('numberGeneratorResult').innerHTML = `
              <div class="alert alert-success">Generated ${amount} mobile numbers for area code ${areaCode}.<br>
              <b>Total Price:</b> $${totalPrice}</div>
              <a href="${data.downloadUrl}" class="btn btn-primary" download>Download Numbers (.txt)</a>
            `;
            loadOrders(); // Orders reload after number generation
          } else {
            document.getElementById('numberGeneratorResult').innerHTML = `<div class="alert alert-danger">${data.message}</div>`;
          }
        });
      };
      modal.show();
    };

    // Balance detection & refresh
    function updateBalance(){
      fetch('/user').then(r => {
        if (r.status === 401 || r.status === 403) handleSessionExpired();
        else r.json().then(user => {
          document.getElementById('userBalance').textContent = `$${(user.balance || 0).toFixed(2)}`;
          document.getElementById('userName').textContent = user.name || 'User';
          hideSessionWarning();
        });
      }).catch(handleSessionExpired);
    }

    function loadOrders(){
      fetch('/orders').then(r => {
        if (r.status === 401 || r.status === 403) handleSessionExpired();
        else r.json().then(rows => {
          let html = '';
          rows.forEach(o => {
            let highlight = o.type === 'Top Up' ? ' style="background:#e6f4ff;"' : '';
            let download = '';
            // If detail contains a "Download: /downloads/...", show a download link
            let match = o.detail.match(/Download:\s*(\/downloads\/generated\/[^\s]+)/);
            if (match) {
              download = `<a href="${match[1]}" class="btn btn-sm btn-primary" download>Download</a>`;
            }
            html += `<tr${highlight}>
              <td>${o.type}</td>
              <td>${o.detail}</td>
              <td><span class="badge bg-${o.status=='pending'?'warning':'success'} order-badge">${o.status}</span></td>
              <td>$${o.price}</td>
              <td>${o.createdAt ? o.createdAt.split('T')[0] : ''}</td>
              <td>${download}</td>
            </tr>`;
          });
          document.getElementById('ordersTable').innerHTML = html;
        });
      }).catch(handleSessionExpired);
    }

    function loadTopups() {
      fetch('/my-topups').then(r => {
        if (r.status === 401 || r.status === 403) handleSessionExpired();
        else r.json().then(rows => {
          let html = '';
          rows.forEach(t => {
            let monitor = '';
            if (t.status === 'pending') {
              monitor = `<button class="btn btn-sm btn-warning" onclick="refreshTopup('${t.invoiceId}')">Refresh</button>
              <br><span class="text-info">Waiting for payment. When payment is confirmed, status will change to <b>complete</b> and your balance will update.</span>`;
            } else {
              monitor = '<span class="badge bg-success">Completed</span>';
            }
            html += `<tr>
              <td>$${parseFloat(t.amount).toFixed(2)}</td>
              <td>${t.payCurrency ? t.payCurrency.toUpperCase() : '-'}</td>
              <td>${t.invoiceId}</td>
              <td><span class="badge bg-${t.status=='pending'?'warning':'success'}">${t.status}</span></td>
              <td>${t.createdAt ? t.createdAt.split('T')[0] : ''}</td>
              <td>${monitor}</td>
            </tr>`;
          });
          document.getElementById('topupsTable').innerHTML = html;
        });
      }).catch(handleSessionExpired);
    }

    window.refreshTopup = function(invoiceId){
      loadTopups();
      updateBalance();
      alert("If your payment is confirmed, status will update shortly. If not, please wait or contact support.");
    }

    function loadSettings(){
      fetch('/user').then(r => {
        if (r.status === 401 || r.status === 403) handleSessionExpired();
        else r.json().then(u => {
          document.getElementById('settingsName').value = u.name||'';
          document.getElementById('settingsEmail').value = u.email||'';
          document.getElementById('settingsProvider').textContent = 'Login: ' + (u.provider==='local'?'Email/Password':'GitHub');
          document.getElementById('settingsJoined').textContent = 'Joined: ' + (u.createdAt ? u.createdAt.split('T')[0] : '');
          document.getElementById('settingsAvatar').src = u.avatarUrl || '/logo.png';
        });
      }).catch(handleSessionExpired);
    }

    function handleSessionExpired() {
      document.getElementById('logoutWarning').style.display = 'block';
      document.getElementById('logoutWarning').innerHTML = '<b>Your session has expired or you have been logged out.</b><br>Please log in again to continue.';
      setTimeout(function(){ window.location.href='/logout'; }, 3000);
    }
    function hideSessionWarning() {
      document.getElementById('logoutWarning').style.display = 'none';
    }

    setInterval(function(){
      loadTopups();
      loadOrders();
      updateBalance();
    }, 12000);

    setInterval(updateBalance, 15000);

    document.addEventListener("DOMContentLoaded", function() {
      var topupModal = new bootstrap.Modal(document.getElementById('topupModal'));
      document.getElementById('topupBtnNavbar').addEventListener("click", function(){
        document.getElementById('topupResult').innerHTML = "";
        document.getElementById('topupAmount').value = "";
        topupModal.show();
      });
      document.getElementById('topupForm').onsubmit = function(e){
        e.preventDefault();
        let amount = document.getElementById('topupAmount').value;
        let coin = document.getElementById('topupCoin').value;
        document.getElementById('topupFormSubmitBtn').disabled = true;
        fetch('/topup', {
          method:'POST',
          headers:{'Content-Type':'application/json'},
          body:JSON.stringify({amount, coin})
        }).then(r=>r.json()).then(data=>{
          document.getElementById('topupFormSubmitBtn').disabled = false;
          if (data.payment_url) {
            document.getElementById('topupResult').innerHTML =
              `<div class="alert alert-success">Proceed to payment: <a href="${data.payment_url}" target="_blank">Pay Now</a></div>
               <div class="mt-2 text-info">After payment, your balance will update automatically in a few seconds. If not, refresh the page.</div>`;
          } else {
            document.getElementById('topupResult').innerHTML =
              `<div class="alert alert-danger">${data.message}</div>`;
          }
          updateBalance();
          loadTopups();
          loadOrders();
        });
      };

      document.getElementById('domainForm').onsubmit = function(e){
        e.preventDefault();
        let domain = document.getElementById('domainInput').value;
        fetch('/domain-search',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({domain})})
        .then(r=>r.json()).then(data=>{
          if(data.available){
            document.getElementById('domainResult').innerHTML = `<div class="alert alert-success">Domain available for $${data.price}. <button class="btn btn-primary btn-sm" onclick="buy('Domain','${domain}',${data.price})">Buy Now</button></div>`;
          }else{
            document.getElementById('domainResult').innerHTML = `<div class="alert alert-danger">Domain not available.</div>`;
          }
        });
      };

      document.getElementById('emailListForm').onsubmit = function(e){
        e.preventDefault();
        let type = document.getElementById('emailType').value;
        let domain = document.getElementById('emailDomain').value;
        let price = 50;
        buy('Email List', `${type} (${domain})`, price);
        document.getElementById('emailListResult').innerHTML = `<div class="alert alert-info">Purchased for $${price}. Check your orders.</div>`;
      };

      document.getElementById('hostForm').onsubmit = function(e){
        e.preventDefault();
        let formData = new FormData();
        formData.append('page', document.getElementById('hostFile').files[0]);
        formData.append('domain', document.getElementById('hostDomain').value);
        fetch('/host-upload',{method:'POST',body:formData})
        .then(r=>r.json()).then(data=>{
          document.getElementById('hostResult').innerHTML = `<div class="alert alert-info">${data.message}</div>`;
        });
      };

      document.getElementById('settingsHostForm').onsubmit = function(e){
        e.preventDefault();
        let formData = new FormData();
        formData.append('page', document.getElementById('settingsHostFile').files[0]);
        formData.append('domain', document.getElementById('settingsHostDomain').value);
        fetch('/host-upload',{method:'POST',body:formData})
        .then(r=>r.json()).then(data=>{
          document.getElementById('settingsHostResult').innerHTML = `<div class="alert alert-info">${data.message}</div>`;
        });
      };

      document.getElementById('settingsForm').onsubmit = function(e){
        e.preventDefault();
        let name = document.getElementById('settingsName').value;
        let email = document.getElementById('settingsEmail').value;
        let password = document.getElementById('settingsPassword').value;
        fetch('/settings',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({name,email,password})})
        .then(r=>r.json()).then(data=>{
          document.getElementById('settingsResult').innerHTML = `<div class="alert alert-info">${data.message}</div>`;
          loadSettings();
        });
      };

      document.getElementById('avatarForm').onsubmit = function(e){
        e.preventDefault();
        let formData = new FormData();
        formData.append('avatar', document.getElementById('avatarFile').files[0]);
        fetch('/settings/avatar',{method:'POST',body:formData})
        .then(r=>r.json()).then(data=>{
          document.getElementById('settingsResult').innerHTML = `<div class="alert alert-info">${data.message}</div>`;
          loadSettings();
        });
      };

      document.getElementById('deleteAccountBtn').onclick = function(){
        if(confirm('Are you sure you want to delete your account? This cannot be undone!')) {
          fetch('/settings/delete',{method:'POST'}).then(r=>r.json()).then(data=>{
            alert(data.message);
            window.location.href='/';
          });
        }
      };
    });

    function buy(type, detail, price) {
      fetch('/user').then(r => {
        if (r.status === 401 || r.status === 403) handleSessionExpired();
        else r.json().then(user => {
          if ((user.balance || 0) < price) {
            alert('Insufficient balance. Please top up.');
          } else {
            fetch('/buy', {
              method: 'POST',
              headers: {'Content-Type':'application/json'},
              body: JSON.stringify({type, detail, price})
            })
            .then(async r => {
              if (r.status === 401 || r.status === 403) handleSessionExpired();
              else {
                const data = await r.json();
                if (r.status === 200) {
                  alert(data.message);
                  updateBalance();
                  loadOrders();
                } else {
                  alert(data.message || "Failed to fulfill purchase. You were not charged.");
                  updateBalance();
                  loadOrders();
                }
              }
            })
            .catch(handleSessionExpired);
          }
        });
      }).catch(handleSessionExpired);
    }

    updateBalance();
    loadOrders();
    loadTopups();
    showSection('market');
  </script>
</body>
</html>